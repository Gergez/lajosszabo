function generatePassword( target1, target2 ) {
	var chars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz";
	var string_length = 8;
	var randomstring = '';
	for (var i=0; i<string_length; i++) {
		var rnum = Math.floor(Math.random() * chars.length);
		randomstring += chars.substring(rnum,rnum+1);
	}
	target1.value = randomstring;
	target2.value = randomstring;
}

function confirmlink(message, url){if(confirm(message)) location.href = url;}
function confirmscript(message, url){if(confirm(message)) url;}
function openCompareWindow(){testwindow = window.open("compareitems.php", "comparewindow", "location=1,status=1,scrollbars=1,width=1000,height=600");}

function calcSumma(){
	counter = jQuery('#szamlasortbl tr').length-3;
	var sumNetto = 0;
	var sumAfa = 0;
	var sumBrutto = 0;
	parseFloat(sumNetto);
	parseFloat(sumAfa);
	parseFloat(sumBrutto);
	for (i=0; i<=counter-1; i++){
		if ( jQuery('#sumnetto'+i).val() != ''){
			eval ("sumNetto=(sumNetto+parseFloat(jQuery('#sumnetto'+i).val()))");
			eval ("sumAfa=(sumAfa+parseFloat(jQuery('#afa'+i).val()))");
			eval ("sumBrutto=(sumBrutto+parseFloat(jQuery('#sumbrutto'+i).val()))");
		}
	}
	jQuery('#szmf_sumnetto').val(sumNetto.toFixed(2));
	jQuery('#szmf_sumafa').val(sumAfa.toFixed(2));
	jQuery('#szmf_sumbrutto').val(sumBrutto.toFixed(2));
}

function calcRow(RowCount){
	var netto = jQuery('#amount'+RowCount).val() * jQuery('#netto'+RowCount).val();
	var afa = jQuery('#amount'+RowCount).val() * (jQuery('#netto'+RowCount).val() * jQuery('#afakulcs'+RowCount).val()/ 100 );
	var brutto = netto + afa;
	jQuery('#sumnetto'+RowCount).val(netto.toFixed(2));
	jQuery('#afa'+RowCount).val(afa.toFixed(2));
	jQuery('#sumbrutto'+RowCount).val(brutto.toFixed(2));
	calcSumma();
}

function calcProductAfa(afakulcs){
	if (afakulcs==0 || afakulcs=='' || jQuery('#productform_netto').val()==''){
		jQuery('#productform_afakulcs').val('0');
		jQuery('#productform_afa').val('0');
		jQuery('#productform_brutto').val(jQuery('#productform_netto').val());
	}else{
		egysar = parseFloat(jQuery('#productform_netto').val());
		var afakulcs = parseFloat(jQuery('#productform_afakulcs').val());
		var afa = 0;
		var brutto = 0;
		afa = parseFloat(jQuery('#productform_netto').val()) * (afakulcs/100);
		eval ("brutto=(egysar+parseFloat(afa))");
		jQuery('#productform_afa').val(afa.toFixed(2));
		jQuery('#productform_brutto').val(brutto.toFixed(2));
	}
}

function calcNetto(netto, afa, brutto){
	nettoar = parseFloat(0);
	afaar = parseFloat(jQuery('#'+brutto).val()) / (parseFloat(jQuery('#'+afa).val())+100) * parseFloat(jQuery('#'+afa).val());
	eval ("nettoar=(parseFloat(jQuery('#'+brutto).val())-parseFloat(afaar))");
	jQuery('#'+netto).val(nettoar.toFixed(2));
}

function calcActionCost(ar, kedvezmeny, akciosar){
	var akcioar = parseFloat(jQuery('#'+ar).val()) * ((100-parseFloat(jQuery('#'+kedvezmeny).val())) / 100);
	jQuery('#'+akciosar).val(akcioar.toFixed(2));
}

function calcBrutto(netto, afa, brutto){
	var egysar = Number(document.getElementById(netto).value);
	var afakulcs = Number(document.getElementById(afa).value);
	var afaar = Number(0);
	var bruttoar = Number(0);
	afaar = egysar * (afakulcs/100);
	eval ("bruttoar=(egysar+parseFloat(afaar))");
	document.getElementById(brutto).value = bruttoar.toFixed(2);
}


/*AJAX*/
function isFreeMemberLoginName(loginname, formname){
	jQuery.ajax({
		method: "POST",
		url: "ajax_getmembername.php",
		data: { loginname : loginname },
		dataType:'json',
		success: function( data ) {
			if (data.isfree == "0"){
			    jQuery("#subscribeform_loginname").val("");
			    jQuery("#loginnameErr").text(data.msg);
		  	}else{
			    jQuery("#loginnameErr").text("");
		  	}
		 }
	});
}

function isFreeMemberEmail(email, formname){

	jQuery.ajax({
		method: "POST",
		url: "ajax_getmemberemail.php",
		data: { email : email },
		dataType:'json',
		success: function( data ) {
			if (data.isfree == "0"){
			    jQuery("#subscribeform_email").val("");
			    jQuery("#emailErr").text(data.msg);
		  	}else{
			    jQuery("#emailErr").text("");
		  	}
		 }
	});
}

function ajaxBanner(id){
	var url = 'banner_jump.php';
	var pars = '&id='+id;
	var target = '';
	var myAjax = new Ajax.Updater(target, url, {method: 'get', parameters: pars});
	return false;
}

function ajaxSetItemMargin(categoryid){
	jQuery.ajax({
	  method: "POST",
	  url: "ajaxSetItemMargin.php",
	  data: { categoryid : categoryid },
	  dataType:'json',
	  success: function( msg ) {
	    jQuery("#itemform_haszon").val(msg);
	  }
	});
}

function ajaxCartPayment(deliveryid){
	jQuery('#cartPaymentDiv').load('ajaxCartPayment.php', {
		deliveryid: parseInt(deliveryid)
	});
}

function ajaxOrderTable(orderid, rownr){
	jQuery.ajax({
		method: "post",
		url: "ajaxOrderTable.php",
		data: { orderid: orderid, rownr : rownr },
		success: function (responseHtml) {
			jQuery("#previewDiv").toggle();
			jQuery("#previewDivContent").html(responseHtml);
		}
	});

}

function ajaxCartDeliveryCost(deliveryid, paymentid, utanvet){
	jQuery('#cartDeliveryCostDiv').load('ajaxCartDeliveryCost.php', {
		deliveryid: parseInt(deliveryid),
		paymentid: parseInt(paymentid),
		utanvet: parseInt(utanvet)
	});
}

function ajaxCartSummaCost(deliveryid, paymentid, utanvet){
	jQuery('#cartSumCostDiv').load('ajaxSetCartSum.php', {
		deliveryid: parseInt(deliveryid),
		paymentid: parseInt(paymentid),
		utanvet: parseInt(utanvet)
	});
}

function ajaxProforma( show ){
	jQuery('#proformaDiv').load('ajaxProforma.php', {
		show: parseInt(show)
	});
}

function ajaxSzamlaPreview(id, show)
{
	jQuery.ajax({
		method: "post",
		url: "ajaxSzamlaPreview.php",
		data: { id : id, show : show },
		success: function (responseHtml) {
			jQuery("#previewDiv").toggle();
			jQuery("#previewDivContent").html(responseHtml);
		}
	});
}


function ajaxCalcOrderRow(counter){
	a = jQuery('#amount'+counter).val();
	b = jQuery('#brutto'+counter).val();
	brutto = parseInt("0");
	if ( a == "" ){
		jQuery('#sumbrutto'+counter).val('0.00');
	}else{
		eval ("brutto=(parseFloat(a)*parseFloat(b))");
		jQuery('#sumbrutto'+counter).val(brutto.toFixed(2));
	}
	return false;
}

function ajaxCalcOrderAfa(counter){
	var netto = jQuery('#netto'+counter).val();
	var afakulcs = jQuery('#afakulcs'+counter).val();
	var afaosszeg = Number(0);
	var brutto = Number(0);
	if ( afakulcs == "" || netto== "" ){
		jQuery('#brutto'+counter).val('0.00');
		jQuery('#afa'+counter).val('0.00');
	}else{
		eval("afaosszeg=(parseFloat((afakulcs/100)*netto))");
		eval("brutto=(parseFloat(afaosszeg)+parseFloat(netto))");
		jQuery('#afa'+counter).val(afaosszeg.toFixed(2));
		jQuery('#brutto'+counter).val(brutto.toFixed(2));
	}
	return false;
}

function ajaxPgepSetOrderID(pgepID, orderID, sel){
	var url = 'ajaxPgepSetOrderID.php';
	var pars = '&pgepID='+pgepID+'&orderID='+orderID+'&sel='+sel;
	new Ajax.Request(url, {
    method: 'post',
    parameters:  pars,
    onSuccess: function(transport){
        var response = JSON.parse(transport.responseText);
		document.getElementById("label"+pgepID).innerHTML = response.res;
    },
    onFailure: function(transport){
        alert('failed ' + transport.responseText);
    }
});
	return false;
}

function ajaxMailRecipients(){
	counter = 0;
	var url = 'ajaxMailRecipients.php';
	var target = 'levlistaDiv';
	var myAjax = new Ajax.Updater(target, url, {method: 'get'});
	return false;
}

function ajaxCloseHj(id){
	var url = 'ajaxCloseHj.php';
	var pars = '&id='+id;
	var target = 'tmpDiv'+id;
	var myAjax = new Ajax.Updater(target, url, {method: 'post', parameters: pars});
	return false;
}

function ajaxSendWorkDoneEmail(id, wsid){
	var url = 'ajaxSendWorkDoneEmail.php';
	var pars = '&id='+id+'&wsid='+wsid;
	var target = 'tmpDiv'+wsid;
	var myAjax = new Ajax.Updater(target, url, {method: 'post', parameters: pars});
	return false;
}

function ajaxAnykSent(id){
	var url = 'ajaxAnykSent.php';
	var pars = '&id='+id;
	new Ajax.Request(url, {
	    method: 'post',
	    parameters:  pars,
	    onSuccess: function(transport){
	        var response = JSON.parse(transport.responseText);
	        jQuery('#c1'+id).html(response.aeenr);
	        jQuery('#c2'+id).html('Igen');
	        jQuery('#c3'+id).html(response.senddate);

	    },
	    onFailure: function(transport){
	        alert('failed ' + transport.responseText);
	    }
	});
	return false;
}

function ajaxDeleteHibajegyGep(id,row){
	var url = 'ajaxDeleteHibajegyGep.php';
	var pars = '&id='+id;
	new Ajax.Request(url, {
	    method: 'post',
	    parameters:  pars,
	    onSuccess: function(transport){
	        var response = JSON.parse(transport.responseText);
	        jQuery('#aeenr'+row).remove();
	        jQuery('#delete'+row).remove();
	        jQuery('#pgep_id'+row).remove();

	    },
	    onFailure: function(transport){
	        alert('failed ' + transport.responseText);
	    }
	});
	return false;
}

function ajaxNavCheckTaxnr(taxnr){

	if (taxnr==''){

	}else{
		var url = 'ajaxNavCheckTaxnr.php';
		var pars = '&taxnr='+taxnr;
		new Ajax.Request(url, {
	    method: 'post',
	    parameters:  pars,
	    onSuccess: function(transport){
	        var response = JSON.parse(transport.responseText);
	        if (response.valid=='1'){
				txt = 'Érvényes adószám<br />';
				txt += response.name+'<br />';
				txt += response.address+'<br />';
				jQuery("#taxnrDiv").html(txt);
/*
 * name
 * address
 * countryCode
 * postalCode
 * city
 * streetName
 * publicPlaceCategory
 * number
 * building
 * staircase
 * floor
 * door
 */
				jQuery("#name").val(response.name);
				jQuery("#country").val(response.countryCode);
				jQuery("#postalcode").val(response.postalCode);
				jQuery("#city").val(response.city);
				jQuery("#street").val(response.streetName);
				jQuery("#streettype").val(response.publicPlaceCategory);
				jQuery("#housenr").val(response.number);
				jQuery("#building").val(response.building);
				jQuery("#lph").val(response.staircase);
				jQuery("#floor").val(response.floor);
				jQuery("#door").val(response.door);
				jQuery("#taxnrchecked").val(1);

				jQuery.ajax({
				  method: "POST",
				  url: "ajaxSetCustomerAddressByTaxNr.php",
				  data: {
					taxnr : jQuery("#taxnr").val(),
/*					name : response.name,*/
					country : response.countryCode,
					postalcode : response.postalCode,
					city : response.city,
					street : response.streetName,
					streettype : response.publicPlaceCategory,
					housenr : response.number,
					building : response.building,
					lph : response.staircase,
					floor : response.floor,
					door : response.door,
//szamllitasi cím
					szcountry : response.countryCode,
					szpostalcode : response.postalCode,
					szcity : response.city,
					szstreet : response.streetName,
					szstreettype : response.publicPlaceCategory,
					szhousenr : response.number,
					szbuilding : response.building,
					szlph : response.staircase,
					szfloor : response.floor,
					szdoor : response.door
	               },
				  dataType:'json',
				  success: function( msg ) {
				    alert('Az adatokat frissítette a rendszer');
				  }
				});

	        }else{
				jQuery("#taxnrDiv").html("A(z) " + response.taxnr + " adószám érvénytelen");
				jQuery("#name").val(response.name);
				jQuery("#country").val(response.countryCode);
				jQuery("#postalcode").val(response.postalCode);
				jQuery("#city").val(response.city);
				jQuery("#street").val(response.streetName);
				jQuery("#streettype").val(response.publicPlaceCategory);
				jQuery("#housenr").val(response.number);
				jQuery("#building").val(response.building);
				jQuery("#lph").val(response.staircase);
				jQuery("#floor").val(response.floor);
				jQuery("#door").val(response.door);
	        }
		},
	    onFailure: function(transport){
		    	alert(transport.statusText);
		    	alert('Ismeretlen hiba a feldolgozás során!');
		    }
		});
	}
	return false;

}

function ajaxNavSendInvoice(szamlaszam, id){
	if (szamlaszam==''){
		alert('Hiányzó számlaszám');
	}else if (id==''){
		alert('Hiányzó számla ID');
	}else{
		jQuery("#transactIdDiv"+id).html('');
		var url = 'ajaxNavSendInvoice.php';
		var pars = '&szamlaszam='+szamlaszam+'&id='+id;
		new Ajax.Request(url, {
	    method: 'post',
	    parameters:  pars,
	    onSuccess: function(transport){
	        var response = JSON.parse(transport.responseText);
	        if (response.error=='0'){
				btn = "<input type='button' name='send' value='Státusz lekérdezése' onClick='ajaxNavGetStatus(\""+response.transactid+"\","+id+");' />";
				jQuery("#navStatusDiv"+id).html(response.status+btn);
				jQuery("#transactIdDiv"+id).html(response.transactid);
				jQuery("#navKuldve"+id).html(response.navkuldve);
	        }else{
				jQuery("#transactIdDiv"+id).html('Hiba:'+response.errormsg);
	        }
		},
	    onFailure: function(transport){
	        alert('Hiba a feldolgozás során!');
	    }
		});
	}
	return false;
}

function ajaxNavAnnul(szamlaszam, id){
	if (szamlaszam==''){
		alert('Hiányzó számlaszám');
	}else if (id==''){
		alert('Hiányzó számla ID');
	}else{
		jQuery("#transactIdDiv"+id).html('');
		var url = 'ajaxNavAnnul.php';
		var pars = '&szamlaszam='+szamlaszam+'&id='+id;
		new Ajax.Request(url, {
	    method: 'post',
	    parameters:  pars,
	    onSuccess: function(transport){
	        var response = JSON.parse(transport.responseText);
	        if (response.error=='0'){
				jQuery("#navStatusDiv"+id).html(response.status);
				jQuery("#transactIdDiv"+id).html(response.transactid);
	        }else{
				jQuery("#transactIdDiv"+id).html('Hiba:'+response.errormsg);
	        }
		},
	    onFailure: function(transport){
	        alert('Hiba a feldolgozás során!');
	    }
		});
	}
	return false;
}

function ajaxNavPrecheckInvoice(szamlaszam, id){
	if (szamlaszam==''){
		alert('Hiányzó számlaszám');
	}else if (id==''){
		alert('Hiányzó számla ID');
	}else{
		jQuery("#transactIdDiv"+id).html('');
		var url = 'ajaxNavPrecheckInvoice.php';
		var pars = '&szamlaszam='+szamlaszam+'&id='+id;
		new Ajax.Request(url, {
	    method: 'post',
	    parameters:  pars,
	    onSuccess: function(transport){
	        var response = JSON.parse(transport.responseText);
	        if (response.error=='0'){
				alert('A számla valid, adattartalam megfelel a formai követelményeknek, beküldhető');
				jQuery("#transactIdDiv"+id).html(response.transactid);
	        }else{
				alert('A számla nem valid, adattartalam nem felel meg a formai követelményeknek!');
				jQuery("#transactIdDiv"+id).html('Hiba:'+response.errormsg);
	        }
		},
	    onFailure: function(transport){
	        alert('Hiba a feldolgozás során!');
	    }
		});
	}
	return false;
}


function ajaxNavGetStatus(transactid, id){
	if (transactid==''){
		alert('Hiányzó tranzakció ID');
	}else if (id==''){
		alert('Hiányzó számla ID');
	}else{
		jQuery("#transactIdDiv"+id).html('');
		var url = 'ajaxNavGetStatus.php';
		var pars = '&transactid='+transactid+'&id='+id;
		new Ajax.Request(url, {
	    method: 'post',
	    parameters:  pars,
	    onSuccess: function(transport){
	        var response = JSON.parse(transport.responseText);
	        if (response.error=='0'){
	        	if (response.status!='DONE'){
		        	btn = "<input type='button' name='send' value='Státusz lekérdezése' onClick='ajaxNavGetStatus(\""+response.transactid+"\","+id+");' />";
					jQuery("#navStatusDiv"+id).html(response.status+'<br />'+btn+'<br />'+response.errormsg);
					jQuery("#transactIdDiv"+id).html(response.transactid);
				}else{
					jQuery("#navStatusDiv"+id).html(response.status);
					jQuery("#transactIdDiv"+id).html(response.transactid);
				}
	        }else{
				jQuery("#transactIdDiv"+id).html('Hiba:'+response.errormsg);
	        }
		},
	    onFailure: function(transport){
	        alert('Hiba a feldolgozás során!');
	    }
		});
	}
	return false;
}

function checkTaxnrHUFormat(taxnr){
	var reg = new RegExp(/^\d{8}-\d{1}-\d{2}$/) ;
	return(reg.test(taxnr));
}


///////////////////////
// jQuery Functions
///////////////////////
function preventDoubleSubmission(form) {
  jQuery(form).on('submit',function(e){
    var frm = jQuery(form);

    if (frm.data('submitted') === true) {
      // Previously submitted - don't submit again
      e.preventDefault();
    } else {
      // Mark it so that the next submit can be ignored
      frm.data('submitted', true);
    }
  });

  // Keep chainability
  return this;
};

function toggle_div_visibility(id) {
	jQuery('#'+id).toggle();
}

function showDiv(id) {
	jQuery('#'+id).show();
}

function ajaxHibajegyPreview(id){
	jQuery.ajax({
		type: "POST",
		url: 'ajaxHibajegyPreview.php',
		data: "id=" + id,
		success: function(data) {
			jQuery("#previewDiv").toggle();
			jQuery("#previewDivContent").html(data);
		}
	});
}

jQuery(window).load(function(){

	"use strict";

	// Text Slider
	jQuery(".text-slider").flexslider({
		animation: "fade",
		controlNav: true,
		directionNav: false,
		slideshow: true,
		start: function(slider){
			jQuery("body").removeClass("loading");
		}
	});

	// Remove Flexslider Nav Text
	jQuery( ".flex-prev" ).empty();
	jQuery( ".flex-next" ).empty();

});

jQuery(function() {

	"use strict";

	// Mobile Menu Expand
	jQuery(".mobile-menu").on("click", ".menu-expand", function(e) {
		e.stopPropagation();
		jQuery(this).parent().children(".sub-menu").toggle();
	});

	// Add Expand To Mobile Menu
	jQuery(".mobile-menu li:has(ul.sub-menu)").append('<div class="menu-expand"><i class="fa fa-plus"></i></div>');

	// Overlay Site Wrapper When Mobile Menu Expanded
	jQuery(".li-mobile-nav").on("click", function() {
		jQuery("body").addClass("menu-expanded");
		jQuery(".site-wrapper-overlay").fadeIn().css("display","block");
	});

	// Overlay Site Wrapper When Cart Expanded
	jQuery(".li-mobile-cart,.cart-tab").on("click", function() {
		jQuery("body").addClass("cart-expanded");
		jQuery(".site-wrapper-overlay").fadeIn().css("display","block");
	});

	// Remove Overlay Site Wrapper When Clicked On
	jQuery(".site-wrapper-overlay").on("click", function() {
		jQuery(".site-wrapper-overlay").fadeOut().css("display","none");
		jQuery("body").removeClass("menu-expanded");
		jQuery("body").removeClass("cart-expanded");
	});

});

function ajaxDeliveryPlace(deliveryid, postalcode){
	jQuery('#cartDeliveryPlaceDiv').load('ajaxDeliveryPlace.php', {
		deliveryid: deliveryid,
		postalcode: postalcode
	});
}

function ajaxDeliveryPlaceSelect(deliveryid, postalcode){
	jQuery('#cartDeliveryPlaceSelectDiv').load('ajaxDeliveryPlaceSelect.php', {
		deliveryid: deliveryid,
		postalcode: postalcode
	});
}

function ajaxDeliveryPlaceSpan(){
	jQuery("#deliveryPlaceSpan").text(jQuery("#orderform_deliveryplace option:selected").text());
}

function ajaxCart(itemid, action, amount, kosar, cartidx){
	jQuery('#cartbox').load('ajax_cart.php', {
		itemid: itemid,
		action: action,
		amount: amount,
		cartidx:cartidx
	}, function(){
		if (action=='add'){
			alert('Termék a kosárba téve!');
		}
		if (action=='remove'){
			alert('A termék eltávoltítva a kosárból!');
		}
		if (action=='clearcart'){
			alert('Kosár kiürítve!');
		}
		location.reload();
	}
	);
}

tinymce.init({
	entity_encoding : "raw",
    selector: "textarea",
	selector : "textarea:not(.noMce)",
    plugins: [
        "advlist autolink lists link image charmap print preview anchor",
        "searchreplace visualblocks code fullscreen",
        "insertdatetime media table contextmenu paste"
    ],
	language: "hu_HU",
	image_advtab: true,
	image_list: "image_list.js",
    toolbar: "insertfile undo redo | styleselect | fontselect fontsizeselect forecolor backcolor | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image",
	fontsize_formats : "6px 8px 10px 11px 12px 13px 14px 15px 16px 17px 18px 19px 20px 21px 22px 23px 24px"
});

function f_calcFieldChange(){
	jQuery(".calcField").keyup(function( event) {
		this.onchange();
	});
}


function f_aeeNrAutocompleteWorksheet(){
	jQuery('input.aeenrw').each(function(i, el) {
	    el = jQuery(el);
		el.autocomplete({
		    source: function (request, response) {
		        jQuery.ajax({
		            url: "ajaxAcPgep.php",
		            method: "POST",
		            dataType: "json",
		            data: {q:encodeURIComponent(request.term),members_id:encodeURIComponent(jQuery('#members_id').val())},
		            success: function (data) {
		            		var id = el.attr('id');
		            		var nr = id.substring(11);
			                response(jQuery.map(data, function (item) {
		                    return {
		                        vId:item.id,
		                        label: item.aeenr,
		                        value: item.aeenr,
								tipus:item.tipus,
								navregkod:item.navregkod,
		                        aeenr: item.aeenr,
								serialnr:item.serialnr,
								naplokod:item.naplokod,
								uhdate:item.uhdate,
								fvdate:item.fvdate,
								nfvdate:item.nfvdate,
								atszemdate:item.atszemdate,
								warrantyend:item.warrantyend,
								uzemmod:item.uzemmod,
								pgepirsz:item.pgepirsz,
								pgepcity:item.pgepcity,
								pgepstreet:item.pgepstreet,
								pgepstreettype:item.pgepstreettype,
								pgephousenr:item.pgephousenr,
								pgepepulet:item.pgepepulet,
								pgeplph:item.pgeplph,
								pgepemelet:item.pgepemelet,
								pgepajto:item.pgepajto,
								nr:nr
		                    };
		                }));
		            }});
		    },
		    minLength: 2,
		    select: function (event, ui) {
				jQuery("#wsrow_aeenr"+ui.item.nr).val(ui.item.aeenr);
				jQuery("#wsrow_serialnr"+ui.item.nr).val(ui.item.serialnr);
				jQuery("#wsrow_tipus"+ui.item.nr).val(ui.item.tipus);
				jQuery("#wsrow_navregkod"+ui.item.nr).val(ui.item.navregkod);
				jQuery("#wsrow_naplokod"+ui.item.nr).val(ui.item.naplokod);
				if (ui.item.vId !== ""){
					jQuery("#wsrow_aeenr"+ui.item.nr).val(ui.item.aeenr);
				}
				if (ui.item.vId !== ""){
					jQuery("#wsrow_pgepid"+ui.item.nr).val(ui.item.vId);
				}
				jQuery("#wsrow_uhdate"+ui.item.nr).val(ui.item.uhdate);
				if (jQuery("#wsform_evesfelul").prop("checked")==true){
					jQuery("#wsrow_fvdate"+ui.item.nr).val(jQuery("#wsform_atvetel").val());
					setNfvDate(jQuery("#wsrow_fvdate"+ui.item.nr).val(),ui.item.nr);
				}else{
					jQuery("#wsrow_fvdate"+ui.item.nr).val(ui.item.fvdate);
					jQuery("#wsrow_nfvdate"+ui.item.nr).val(ui.item.nfvdate);
				}

				jQuery("#wsrow_atszemdate"+ui.item.nr).val(ui.item.atszemdate);
				jQuery("#wsrow_warrantyend"+ui.item.nr).val(ui.item.warrantyend);
				jQuery("#wsrow_navregkod"+ui.item.nr).val(ui.item.navregkod);
				jQuery("#wsrow_pgepirsz"+ui.item.nr).val(ui.item.pgepirsz);
				jQuery("#wsrow_pgepcity"+ui.item.nr).val(ui.item.pgepcity);
				jQuery("#wsrow_pgepstreet"+ui.item.nr).val(ui.item.pgepstreet);
				jQuery("#wsrow_pgepstreettype"+ui.item.nr).val(ui.item.pgepstreettype);
				jQuery("#wsrow_pgephousenr"+ui.item.nr).val(ui.item.pgephousenr);
				jQuery("#wsrow_pgepepulet"+ui.item.nr).val(ui.item.pgepepulet);
				jQuery("#wsrow_pgeplph"+ui.item.nr).val(ui.item.pgeplph);
				jQuery("#wsrow_pgepemelet"+ui.item.nr).val(ui.item.pgepemelet);
				jQuery("#wsrow_pgepajto"+ui.item.nr).val(ui.item.pgepajto);
				jQuery("#wsrow_uzemmod"+ui.item.nr).val(ui.item.uzemmod);
		    }
		});

	});

}// end function f_aeeNrAutocompleteWorksheet(){

function f_aeeNrAutocomplete(){
	jQuery('input.aeenr').each(function(i, el) {
	    el = jQuery(el);
		el.autocomplete({
			highlight:true,
		    source: function (request, response) {
		        jQuery.ajax({
		            url: "ajaxAcPgep.php",
		            dataType: "json",
		            method: "POST",
		            data: {q:encodeURIComponent(request.term),members_id:encodeURIComponent(jQuery('#members_id').val()),filter:el.attr('isfilter')},
		            success: function (data) {
		            		var nr = el.attr('id').substring(5);
			                response(jQuery.map(data, function (item) {
							if (item.muszeresz!="" && item.szervizben!='0'){
			                    return {
			                        vId:item.id,
			                        label:
			                         item.aeenr+
			                         ' ÜH: '+item.uhdate+
			                         ' FV: '+item.fvdate+
			                         ' KFV: '+item.nfvdate+
			                         ' SZERVÍZBEN! Műszerész: '+item.muszeresz,
			                        value: item.aeenr,
			                        aeenr: item.aeenr,
			                        szervizben: item.szervizben,
			                        muszeresz: item.muszeresz,
			                        leszerelve: item.leszerelve,
									nr:nr
			                    };
							}else{
			                    return {
			                        vId:item.id,
			                        label:
			                         item.aeenr+
			                         ' ÜH: '+item.uhdate+
			                         ' FV: '+item.fvdate+
			                         ' KFV: '+item.nfvdate,
			                        value: item.aeenr,
			                        aeenr: item.aeenr,
			                        szervizben: item.szervizben,
			                        muszeresz: item.muszeresz,
			                        leszerelve: item.leszerelve,
									nr:nr
			                    };
							}

		                }));
		            }});
		    },
		    minLength: 2,
		    autoFocus:true,
		    select: function (event, ui) {
		    	is_filter = el.attr('isfilter');
		    	if (ui.item.vId!=''){
					if (ui.item.szervizben == '1' && is_filter == '0'){
						jQuery("#aeenr"+ui.item.nr).val('');
						jQuery("#pgep_id"+ui.item.nr).val('');
						alert('A gép már másik műszerésznél van szervízben!');
						return false;
					}else if (is_filter == 'unique' && ui.item.vId != '' && ui.item.leszerelve=='0'){
						jQuery("#aeenr"+ui.item.nr).val('');
						jQuery("#pgep_id"+ui.item.nr).val('');
						alert('A '+ui.item.aeenr+' számú gép már szerepel az adatbázisban!');
						return false;
					}else{
						jQuery("#aeenr"+ui.item.nr).val(ui.item.aeenr);
						jQuery("#pgep_id"+ui.item.nr).val(ui.item.vId);
					}
				}else{
					jQuery("#aeenr"+ui.item.nr).val('');
					jQuery("#pgep_id"+ui.item.nr).val('');
					alert('Nincs ilyen gép az adatbázisban!');
					return false;
				}
		    },
		    focus: function( event, ui ) { event.preventDefault(); }
		}).autocomplete("instance")._renderItem = function(ul, item) {
		    	is_filter = el.attr('isfilter');
		    	row = el.attr('id').substring(5);
		        var newText = String(item.label).replace(
                new RegExp(this.term, "gi"),
                "<span class='ui-state-highlight'>$&</span>");
	            if (item.szervizben == '1' && is_filter == '0'){
					return jQuery('<li class="ui-state-disabled">'+item.aeenr+' Műszerész: '+item.muszeresz+'</li>').appendTo(ul);
	            }else if (is_filter=='unique' && item.vId != '' && item.leszerelve == '0'){
	            	jQuery('#aeenr_valid'+row).val('0');
					return jQuery('<li class="ui-state-disabled">Az '+item.aeenr+' számú gép már szerepel az adatbázisban!</li>').appendTo(ul);
	            }else{
	            	jQuery('#aeenr_valid'+row).val('1');
		            return jQuery("<li>")
		            .append("<div>" + newText + "</div>")
		            .appendTo(ul);
	            }
	        };
	});
}


function addAeenrInp(){
	var nextid = jQuery('.aeenr[isfilter="0"]').length;
	jQuery('#aeenrcell').append('<br />');
	jQuery('#aeenrcell').append(jQuery('<input/>',{type:'text',
                                   id: 'aeenr'+nextid,
                                   class: 'aeenr',
                                   maxlenght:'20',
                                   isfilter: 0,
                                   name: 'pgep_aeenr['+nextid+']',
                                   value:''}));
	jQuery('#aeenrcell').append(jQuery('<input/>',{type:'hidden',
                                   id: 'pgep_id'+nextid,
                                   name: 'pgep_id['+nextid+']',
                                   value:''}));


	f_aeeNrAutocomplete();
}


function f_lastModDateAutocomplete(){
	jQuery(".ldate").autocomplete({
	    source: function (request, response) {
	        jQuery.ajax({
	            url: "ajaxLastItemModification.php",
	            dataType: "json",
	            data: "q=" + encodeURIComponent(request.term),
	            success: function (data) {
	                response(jQuery.map(data, function (item) {
	                    return {
	                        label: item.lastmod,
	                        value: item.lastmod
	                    };
	                }));
	            }});
	    },
	    minLength: 2,
	    select: function (event, ui) {
			jQuery(this).val(ui.item.value);
	    }
	});
} // end function f_lastModDateAutocomplete

function f_customerNameAutocomplete(){
	jQuery('input.customername').each(function(i, el) {
	    el = jQuery(el);
	    el.autocomplete({
	    source: function (request, response) {
	        jQuery.ajax({
	            url: "ajaxAcSzamlaPartner.php",
	            method: "POST",
	            dataType: "json",
	            data: "q=" + encodeURIComponent(request.term),
	            success: function (data) {
	                response(jQuery.map(data, function (item) {
						if (data[0].szname != 'Nincs találat'){
		                    return {
		                        label: item.name+' '+
								item.postalcode+' '+
								item.city+' '+
								item.street+' '+
								item.streettype+' '+
								item.housenr+' '+
								item.building+' '+
								item.lph+' '+
								item.floor+' '+
								item.door,

		                        value: item.name,
		                        vId:item.id,
		                        address: item.address,
								taxnr: item.taxnr,
								email: item.email,
								phone: item.phone,
								szname:item.szname,
								szcountry:item.szcountry,
								szpostalcode:item.szpostalcode,
								szcity:item.szcity,
								szstreet:item.szstreet,
								szstreettype:item.szstreettype,
								szhousenr:item.szhousenr,
								szbuilding:item.szbuilding,
								szlph:item.szlph,
								szfloor:item.szfloor,
								szdoor:item.szdoor,

								name:item.name,
								country:item.country,
								postalcode:item.postalcode,
								city:item.city,
								street:item.street,
								streettype:item.streettype,
								housenr:item.housenr,
								building:item.building,
								lph:item.lph,
								floor:item.floor,
								door:item.door,
								cgnr:item.cgnr
		                    }
						}else{
		                    return {
		                        label: item.szname,
		                        value: item.szname,
		                        vId: -1
		                    }
						}

	                }));
	            }});
	    },
	    minLength: 2,
	    select: function (event, ui) {
	    	if (ui.item.vId != -1 && ui.item.vId != ""){
				if (el.attr('id') == 'fuzemelteto'){
					jQuery("#fmembers_id").val(ui.item.vId);
				}else{
					jQuery("#members_id").val(ui.item.vId);
				}
				jQuery("#taxnr").val(ui.item.taxnr);
				jQuery("#contactperson").val(ui.item.contactperson);
				jQuery("#email").val(ui.item.email);
				jQuery("#phone").val(ui.item.phone);
				jQuery("#szname").val(ui.item.szname);
/*
				jQuery("#szcountry").val(ui.item.szcountry);
				jQuery("#szpostalcode").val(ui.item.szpostalcode);
				jQuery("#szcity").val(ui.item.szcity);
				jQuery("#szstreet").val(ui.item.szstreet);
				jQuery("#szstreettype").val(ui.item.szstreettype);

				jQuery("#szhousenr").val(ui.item.szhousenr);
				jQuery("#szbuilding").val(ui.item.szbuilding);
				jQuery("#szlph").val(ui.item.szlph);
				jQuery("#szfloor").val(ui.item.szfloor);
				jQuery("#szdoor").val(ui.item.szdoor);
*/
				jQuery("#name").val(ui.item.name);
				jQuery("#country").val(ui.item.country);
				jQuery("#postalcode").val(ui.item.postalcode);
				jQuery("#city").val(ui.item.city);
				jQuery("#street").val(ui.item.street);
				jQuery("#streettype").val(ui.item.streettype);
				jQuery("#housenr").val(ui.item.housenr);
				jQuery("#building").val(ui.item.building);
				jQuery("#lph").val(ui.item.lph);
				jQuery("#floor").val(ui.item.floor);
				jQuery("#door").val(ui.item.door);
				jQuery("#cgnr").val(ui.item.cgnr);
			}else{
				jQuery("#members_id").val(0);
				jQuery("#taxnr").val("");
				jQuery("#contactperson").val("");
				jQuery("#email").val("");
				jQuery("#phone").val("");
				jQuery("#szname").val("");
/*
				jQuery("#szcountry").val("");
				jQuery("#szpostalcode").val("");
				jQuery("#szcity").val("");
				jQuery("#szstreet").val("");
				jQuery("#szstreettype").val("");

				jQuery("#szhousenr").val("");
				jQuery("#szbuilding").val("");
				jQuery("#szlph").val("");
				jQuery("#szfloor").val("");
				jQuery("#szdoor").val("");
*/
				jQuery("#name").val("");
				jQuery("#country").val("");
				jQuery("#postalcode").val("");
				jQuery("#city").val("");
				jQuery("#street").val("");
				jQuery("#streettype").val("");
				jQuery("#housenr").val("");
				jQuery("#building").val("");
				jQuery("#lph").val("");
				jQuery("#floor").val("");
				jQuery("#door").val("");
				jQuery("#cgnr").val("");
				return false;
			}
	    }
	}).autocomplete("instance")._renderItem = function(ul, item) {
			        var newText = String(encodeURIComponent(item.label)).replace(
	                new RegExp(encodeURIComponent(this.term), "gi"),
	                "<span class='ui-state-highlight'>$&</span>");
		            return jQuery("<li>")
		                .append("<div>" +
		                	"<span class='bold'>" +decodeURIComponent(newText) +"</span><br />" +
		                    "<span>"+item.address+" Adószám: "+ item.taxnr+"</span>"+
		                    "</div>"
		                    ).appendTo(ul);
		};
	});

}// end function f_customerNameAutocomplete();

function f_addAdditionalPriceItems(itemID){

	jQuery.ajax({
		method: "post",
		url: "ajaxAddAdditionalPriceItems.php",
		data: { itemid: itemID},
		success: function (response) {
			if (response != 0) {
			result = jQuery.parseJSON(response);
				for (i=0; i<result.length; i++){
					c = jQuery('#tetelTable tr').length - 3;
					addTableRow('tetelTable');

					jQuery("#item_id"+c).val(result[i].id);
					jQuery("#megnevezes"+c).val(result[i].title);
					jQuery("#suly"+c).val(result[i].weight);
					jQuery("#egyseg"+c).val(result[i].unit);
					jQuery("#amount"+c).val('1');
					jQuery("#netto"+c).val(parseFloat(result[i].cost).toFixed(2));
					jQuery("#afakulcs"+c).val(result[i].afakulcs);
					afa = (result[i].afakulcs/100) * result[i].cost;
					jQuery("#afa"+c).val(afa.toFixed(2));
					jQuery("#brutto"+c).val(result[i].brutto);
					jQuery("#sumbrutto"+c).val(result[i].brutto);
					jQuery("#sumnetto"+c).val(parseFloat(result[i].cost).toFixed(2));
					jQuery("#aeenr"+c).val(result[i].engszam);
					jQuery("#tipus"+c).val(result[i].tipus);
					jQuery("#naplokod"+c).val(result[i].engszam);

			    	ajaxCalcOrderRow(c);

				}// end for (i=0; i<response.length; i++){
			    	calcSumma();
			}// end if (response != 0) {


		}// end success: function (response) {
	});
}

function f_productAutocomplete(){
	jQuery('input.title').each(function(i, el) {
	    el = jQuery(el);
	    var aeeInputs = jQuery(".aeenr");
	    var engszArr = [];
	    engszamokTxt = "";
		for ( var i = 0; i < aeeInputs.length; i++){
			if (jQuery.inArray(jQuery(aeeInputs[i]).val().substring(0,4),engszArr) == -1){
				engszArr.push(jQuery(aeeInputs[i]).val().substring(0,4));
				engszamokTxt = engszamokTxt + jQuery(aeeInputs[i]).val().substring(0,4)+",";
			}
		}

		el.autocomplete({
		    source: function (request, response) {
		        jQuery.ajax({
		            url: "ajaxACProduct.php",
		            dataType: "json",
		            data: {q:encodeURIComponent(request.term),engszamok:engszamokTxt.substring(0,engszamokTxt.length-1)},
		            success: function (data) {
		            		var id = el.attr('id');
		            		var nr = id.substring(10);
			                response(jQuery.map(data, function (item) {
		                    return {
		                        vId:item.id,
		                        label: item.title+' '+item.brutto,
		                        value: item.title,
								weight:item.weight,
								egyseg:item.unit,
								netto:item.cost,
								afakulcs:item.afakulcs,
								afa:(item.afakulcs/100) * item.cost,
								brutto:item.brutto,
								engszam:item.engszam,
								tipus:item.tipus,
								nr:nr
		                    };
		                }));
		            }});
		    },
		    minLength: 2,
		    select: function (event, ui) {
				jQuery("#item_id"+ui.item.nr).val(ui.item.vId);
				jQuery("#megnevezes"+ui.item.nr).val(ui.item.title);
				jQuery("#suly"+ui.item.nr).val(ui.item.weight);
				jQuery("#egyseg"+ui.item.nr).val(ui.item.egyseg);
				jQuery("#amount"+ui.item.nr).val('1');
				jQuery("#netto"+ui.item.nr).val(parseFloat(ui.item.netto).toFixed(2));
				jQuery("#afakulcs"+ui.item.nr).val(ui.item.afakulcs);
				afa = parseFloat(ui.item.afa);
				jQuery("#afa"+ui.item.nr).val(afa.toFixed(2));
				jQuery("#brutto"+ui.item.nr).val(ui.item.brutto);
				jQuery("#sumbrutto"+ui.item.nr).val(ui.item.brutto);
				jQuery("#sumnetto"+ui.item.nr).val(parseFloat(ui.item.netto).toFixed(2));
				jQuery("#aeenr"+ui.item.nr).val(ui.item.engszam);
				jQuery("#tipus"+ui.item.nr).val(ui.item.tipus);
				jQuery("#naplokod"+ui.item.nr).val(ui.item.engszam);
		    	ajaxCalcOrderRow(ui.item.nr);
		    	f_addAdditionalPriceItems(ui.item.vId);
		    	calcSumma();
		    }
		});

	});
}

function addTableRow(tableID){
	counter = jQuery('#'+tableID+' tr').length;
	rowPos = counter-1;
	counter = counter-3;
	nr = counter+1;
	var table = document.getElementById(tableID);
	var row = table.insertRow(rowPos);
	row.id = 'tRow'+counter;

	var cell0 = row.insertCell(0);
	var cell1 = row.insertCell(1);
	var cell2 = row.insertCell(2);
	var cell3 = row.insertCell(3);
	var cell4 = row.insertCell(4);
	var cell5 = row.insertCell(5);
	var cell6 = row.insertCell(6);
	var cell7 = row.insertCell(7);
	var cell8 = row.insertCell(8);
	var cell9 = row.insertCell(9);

	if (tableID == 'tetelTable'){
		var products = "";
		products = products + "<input type='hidden' name='itemform_item_id["+counter+"]' id='item_id"+counter+"'>";
		products = products + "<input class='title size40' type='text' name='itemform_megnevezes["+counter+"]' id='megnevezes"+counter+"' value='' />";
		cell0.innerHTML = products;
		cell1.innerHTML = "<input type='number' lang='en' step='any' name='itemform_suly["+counter+"]' id='suly"+counter+"' class='size5' value='0.00' />";
		cell2.innerHTML = "<input type='text'  class='size5' name='itemform_units["+counter+"]' id='egyseg"+counter+"' value='' />";
		cell3.innerHTML = "<input type='number' lang='en' step='any' class='calcField size2' name='itemform_amount["+counter+"]' id='amount"+counter+"' value='1' onChange='ajaxCalcOrderRow("+counter+");' />";
		cell4.innerHTML = "<input type='number' lang='en' step='any' class='calcField size10' name='itemform_netto["+counter+"]' id='netto"+counter+"' value='0.00' onChange='ajaxCalcOrderAfa("+counter+");ajaxCalcOrderRow("+counter+");' />";
		cell5.innerHTML = "<input type='number' lang='en' step='1' class='calcField size2' name='itemform_afakulcs["+counter+"]' id='afakulcs"+counter+"' value='0.00' onChange='ajaxCalcOrderAfa("+counter+");ajaxCalcOrderRow("+counter+");' />";
		cell6.innerHTML = "<input type='text' readonly='readonly' name='itemform_afa["+counter+"]' id='afa"+counter+"' class='size10' value='0.00' />";
		cell7.innerHTML = "<input type='text' readonly='readonly' name='itemform_brutto["+counter+"]' id='brutto"+counter+"' class='size10' value='0.00' />";
		cell8.innerHTML = "<input type='text' readonly='readonly' name='itemform_sumbrutto["+counter+"]' id='sumbrutto"+counter+"' class='size10' value='0.00' />";
		cell9.innerHTML = "<input type='checkbox' name='itemform_kulonsor["+counter+"]' id='kulonsor"+counter+"' value='1' /> Külön sorba<br />"+
		"<input type='checkbox' name='itemform_penztargep["+counter+"]' id='penztargep"+counter+"' value='1' /> Pénztárgép<br />" ;
//		"<input type='button' id='delBtn"+counter+"' value='Töröl' onClick='if( jQuery(\"#tetelTable tr\").length == "+(counter+4)+" ){jQuery(\"#tRow"+counter+"\").remove();}else{alert(\"Csak az utolsó sor törölhető!\");} '>";
	}

//SZÁMLA
	if (tableID == 'szamlasortbl'){
			cell0.innerHTML = "<b>"+nr+". </b>"+
			"<input type='hidden' name='szmf_szamlasor["+counter+"][sorszam]' size='1' value='"+nr+"' />" +
			"<input type='hidden' name='szmf_szamlasor["+counter+"][products_id]' id='item_id"+counter+"' value='"+nr+"' />" +
			"<input type='text' class='title size40' name='szmf_szamlasor["+counter+"][megnevezes]' id='megnevezes"+counter+"' value='' />";
			cell1.innerHTML = "<input type='text' class='size5' name='szmf_szamlasor["+counter+"][vtsz]' id='vtsz"+counter+"' value='' />";
			cell2.innerHTML = "<input type='text' class='size2' name='szmf_szamlasor["+counter+"][egyseg]' id='egyseg"+counter+"' value='' />";
			cell3.innerHTML = "<input type='number' lang='en' step='any' class='calcField size2' name='szmf_szamlasor["+counter+"][mennyiseg]' id='amount"+counter+"' value='' onChange='calcRow("+counter+");calcSumma()' />";
			cell4.innerHTML = "<input type='number' lang='en' step='any' class='calcField size10' name='szmf_szamlasor["+counter+"][nettoegysegar]' id='netto"+counter+"'  value='' onChange='calcRow("+counter+");' />";
			cell5.innerHTML = "<input type='number' lang='en' step='any' class='calcField size2' name='szmf_szamlasor["+counter+"][afakulcs]' id='afakulcs"+counter+"' value='' onChange='calcRow("+counter+");' />";
			cell6.innerHTML = "<input type='text' class='size10' readonly='readonly' name='szmf_szamlasor["+counter+"][afaosszeg]' id='afa"+counter+"' value='' />";
			cell7.innerHTML = "<input type='text' readonly='readonly' class='size10' name='szmf_szamlasor["+counter+"][sumnettoar]' id='sumnetto"+counter+"' value='' />"+
			"<input type='hidden' name='itemform_brutto["+counter+"]' id='brutto"+counter+"' class='size10' value='0.00' />";
			cell8.innerHTML = "<input type='text' readonly='readonly' class='size10' name='szmf_szamlasor["+counter+"][sumbruttoar]' id='sumbrutto"+counter+"' value='' />";
			cell9.innerHTML =
			"<input class='checkbox' type='checkbox' name='szmf_szamlasor["+counter+"][kozvetitett]' value='1' />" +
			"<font size='1'>Közv. szolg.</font>"+
			"<br />"+
			"<input class='checkbox' type='checkbox' name='szmf_szamlasor["+counter+"][kulafa]' value='1' />"
			+"<font size='1'>Kül. áfa</font>";
	}
	f_productAutocomplete();
	f_calcFieldChange();
}

jQuery(document).ready(function() {
	f_customerNameAutocomplete();
	f_aeeNrAutocomplete();
	f_aeeNrAutocompleteWorksheet();
	f_productAutocomplete();
	f_calcFieldChange();
	"use strict";

	// Slideshow

	jQuery(".swiper-container", ".slider-wrapper").show();

	var mySwiper = new Swiper(".swiper-container",{
		pagination: ".pagination",
		loop:true,
		autoplay: 7000,
		grabCursor: true,
		paginationClickable: true
	})

	jQuery(".arrow-left", ".slider-wrapper").on("click", function(e){
		e.preventDefault()
		mySwiper.swipePrev()
	})

	jQuery(".arrow-right", ".slider-wrapper").on("click", function(e){
		e.preventDefault()
		mySwiper.swipeNext()
	});

	// Fixed Menu
	var nav = jQuery(".fixed-navigation");
	jQuery(window).scroll(function () {
		if (jQuery(this).scrollTop() > 500) {
			nav.addClass("fixed-navigation-show");
		} else {
			nav.removeClass("fixed-navigation-show");
		}
	});

	// Accordion
	jQuery( ".accordion" ).accordion( { autoHeight: false } );

	// Toggle
	jQuery( ".toggle > .inner" ).hide();
	jQuery(".toggle .title").on("click",function() {
		jQuery(this).toggleClass("active");
		if (jQuery(this).hasClass("active")) {
			jQuery(this).closest(".toggle").find(".inner").slideDown(200, "easeOutCirc");
		} else {
			jQuery(this).closest(".toggle").find(".inner").slideUp(200, "easeOutCirc");
		}
	});

	// Tabs
	jQuery(function() {
		jQuery( "#tabs" ).tabs();
	});

	// PrettyPhoto
	jQuery("a[rel^='prettyPhoto']").prettyPhoto({
		animation_speed: 'fast', /* fast/slow/normal */
		slideshow: 5000, /* false OR interval time in ms */
		autoplay_slideshow: false, /* true/false */
		opacity: 0.80, /* Value between 0 and 1 */
		show_title: true, /* true/false */
		allow_resize: true, /* Resize the photos bigger than viewport. true/false */
		default_width: 500,
		default_height: 344,
		counter_separator_label: '/', /* The separator for the gallery counter 1 "of" 2 */
		theme: 'pp_default', /* light_rounded / dark_rounded / light_square / dark_square / facebook */
		horizontal_padding: 20, /* The padding on each side of the picture */
		hideflash: false, /* Hides all the flash object on a page, set to TRUE if flash appears over prettyPhoto */
		wmode: 'opaque', /* Set the flash wmode attribute */
		autoplay: true, /* Automatically start videos: True/False */
		modal: false, /* If set to true, only the close button will close the window */
		deeplinking: true, /* Allow prettyPhoto to update the url to enable deeplinking. */
		overlay_gallery: true, /* If set to true, a gallery will overlay the fullscreen image on mouse over */
		keyboard_shortcuts: true, /* Set to false if you open forms inside prettyPhoto */
		changepicturecallback: function(){}, /* Called everytime an item is shown/changed */
		callback: function(){}, /* Called when prettyPhoto is closed */
		ie6_fallback: true,
		markup: '<div class="pp_pic_holder"> \
					<div class="ppt">&nbsp;</div> \
					<div class="pp_top"> \
						<div class="pp_left"></div> \
						<div class="pp_middle"></div> \
						<div class="pp_right"></div> \
					</div> \
					<div class="pp_content_container"> \
						<div class="pp_left"> \
							<div class="pp_right"> \
								<div class="pp_content"> \
									<div class="pp_loaderIcon"></div> \
									<div class="pp_fade"> \
										<a href="#" class="pp_expand" title="Expand the image">Expand</a> \
										<div class="pp_hoverContainer"> \
											<a class="pp_next" href="#">next</a> \
											<a class="pp_previous" href="#">previous</a> \
										</div> \
										<div id="pp_full_res"></div> \
										<div class="pp_details"> \
											<div class="pp_nav"> \
												<a href="#" class="pp_arrow_previous">Previous</a> \
												<p class="currentTextHolder">0/0</p> \
												<a href="#" class="pp_arrow_next">Next</a> \
											</div> \
											<p class="pp_description"></p> \
											{pp_social} \
											<a class="pp_close" href="#">x</a> \
										</div> \
									</div> \
								</div> \
							</div> \
							</div> \
						</div> \
						<div class="pp_bottom"> \
							<div class="pp_left"></div> \
							<div class="pp_middle"></div> \
							<div class="pp_right"></div> \
						</div> \
					</div> \
					<div class="pp_overlay"></div>',
			gallery_markup: '<div class="pp_gallery"> \
								<a href="#" class="pp_arrow_previous">Previous</a> \
								<div> \
									<ul> \
										{gallery} \
									</ul> \
								</div> \
								<a href="#" class="pp_arrow_next">Next</a> \
							</div>',
			image_markup: '<img id="fullResImage" src="{path}" />',
			flash_markup: '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="{width}" height="{height}"><param name="wmode" value="{wmode}" /><param name="allowfullscreen" value="true" /><param name="allowscriptaccess" value="always" /><param name="movie" value="{path}" /><embed src="{path}" type="application/x-shockwave-flash" allowfullscreen="true" allowscriptaccess="always" width="{width}" height="{height}" wmode="{wmode}"></embed></object>',
			quicktime_markup: '<object classid="clsid:02BF25D5-8C17-4B23-BC80-D3488ABDDC6B" codebase="http://www.apple.com/qtactivex/qtplugin.cab" height="{height}" width="{width}"><param name="src" value="{path}"><param name="autoplay" value="{autoplay}"><param name="type" value="video/quicktime"><embed src="{path}" height="{height}" width="{width}" autoplay="{autoplay}" type="video/quicktime" pluginspage="http://www.apple.com/quicktime/download/"></embed></object>',
			iframe_markup: '<iframe src ="{path}" width="{width}" height="{height}" frameborder="no"></iframe>',
			inline_markup: '<div class="pp_inline">{content}</div>',
			custom_markup: '',
			social_tools: '<div class="pp_social"><div class="twitter"><a href="http://twitter.com/share" class="twitter-share-button" data-count="none">Tweet</a><script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script></div><div class="facebook"><iframe src="http://www.facebook.com/plugins/like.php?locale=en_US&href='+location.href+'&amp;layout=button_count&amp;show_faces=true&amp;width=500&amp;action=like&amp;font&amp;colorscheme=light&amp;height=23" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:500px; height:23px;" allowTransparency="true"></iframe></div></div>' /* html or false to disable */
	});

	// Search Button Toggle
	jQuery(".search-button", "#primary-navigation").on("click", function() {
		jQuery(".search-form").toggleClass("search-form-show", 0);
	});

	// Search Button Toggle
	jQuery(".close-search", "#primary-navigation").on("click", function() {
		jQuery(".search-form").toggleClass("search-form-show", 0);
	});

	// Mobile Search Button Toggle
	jQuery(".li-mobile-search", "#logo-wrapper").on("click", function() {
		jQuery(".mobile-search-form").toggleClass("mobile-search-form-hide", 0);
		jQuery("#logo").toggleClass("logo-hide", 0);
		jQuery(".li-mobile-nav").toggleClass("li-mobile-nav-hide", 0);
		jQuery(".li-mobile-cart").toggleClass("li-mobile-cart-hide", 0);
		jQuery(".mobile-nav-search .fa-search").toggleClass("li-mobile-cart-hide", 0);
	});

	// Main Navigation
	jQuery("#navigation li").on("mouseenter mouseleave", function (e) {

		var elm = jQuery("ul:first", this);
		var off = elm.offset();
		var l = off.left;
		var w = elm.width();
		var docH = jQuery(".outer-wrapper").height();
		var docW = jQuery(".outer-wrapper").width();

		var isEntirelyVisible = (l+ w <= docW);

		if ( ! isEntirelyVisible ) {
			jQuery(this).addClass("edge");
		} else {
			jQuery(this).removeClass("edge");
		}
	});

	jQuery('.comparechk').on('change', function() {

        var sid = jQuery(this).val();
        var saction = jQuery(this).is(':checked') ? 'add' : 'remove';
        var data = {id:sid, action:saction};

        jQuery.ajax({
            type: "POST",
            url: "ajax_addidtocompare.php",
            data: data,
        }).done(function(data) {

        });

	}); //end compare chk

});
